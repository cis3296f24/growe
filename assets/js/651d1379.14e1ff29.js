"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[3579],{4529:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>t,metadata:()=>o,toc:()=>u});var s=r(74848),a=r(28453);const t={sidebar_position:5},i="Use-case descriptions / Sequence Diagram",o={id:"requirements/use-case-descriptions",title:"Use-case descriptions / Sequence Diagram",description:"Use Case: Signing Up from login page",source:"@site/docs/requirements/use-case-descriptions.md",sourceDirName:"requirements",slug:"/requirements/use-case-descriptions",permalink:"/growe/docs/requirements/use-case-descriptions",draft:!1,unlisted:!1,editUrl:"https://github.com/cis3296f24/growe/edit/main/documentation/docs/requirements/use-case-descriptions.md",tags:[],version:"current",lastUpdatedBy:"bash",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docsSidebar",previous:{title:"Features and Requirements",permalink:"/growe/docs/requirements/features-and-requirements"},next:{title:"System Architecture",permalink:"/growe/docs/category/system-architecture"}},c={},u=[{value:"Use Case: Signing Up from login page",id:"use-case-signing-up-from-login-page",level:2},{value:"Use Case: Logging in",id:"use-case-logging-in",level:2},{value:"Use Case: Creating Group after successfully login or sign up",id:"use-case-creating-group-after-successfully-login-or-sign-up",level:2},{value:"Use Case: Join Group after successfully login / signup",id:"use-case-join-group-after-successfully-login--signup",level:2}];function d(e){const n={h1:"h1",h2:"h2",mermaid:"mermaid",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"use-case-descriptions--sequence-diagram",children:"Use-case descriptions / Sequence Diagram"}),"\n",(0,s.jsx)(n.h2,{id:"use-case-signing-up-from-login-page",children:"Use Case: Signing Up from login page"}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\n  participant User\n  participant Auth\n  participant Server\n  participant Database\n\n  User ->> Auth : Enter Email\n  Auth ->> Server : Store Email\n  Server --\x3e Database : Check Email Exists\n  Database --\x3e> Server : Validate Email\n  Server --\x3e> Auth : Validate Step\n  User ->> Auth : Enter Username and Display Name\n  Auth ->> Server : Store Username\n  Server --\x3e Database : Check Username Exists\n  Database --\x3e> Server : Validate Username\n  Server --\x3e> Auth : Validate Step\n  User ->> Auth : Enter Password\n  User ->> Auth : Request Sign Up\n  Auth ->> Server : Handle Sign Up\n  Server --\x3e Database : Add User\n  Database --\x3e> Server : Return User\n  Server --\x3e> Auth : Return User\n  Auth --\x3e> User : Serve Home Screen"}),"\n",(0,s.jsx)(n.h2,{id:"use-case-logging-in",children:"Use Case: Logging in"}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\n  participant User\n  participant Auth\n  participant Server\n  participant Database\n\n  User ->> Auth : Enter Email\n  Auth ->> Server : Store Email\n  \n  \n  Server --\x3e> Auth : Validate Step\n  User ->> Auth : Enter Password\n  Auth ->> Server : Store Password\n  Server--\x3e Database: Check if Password is correct\n  Server --\x3e Database : Check Email Exists\n  \n  alt Password is correct and email Exists\n  Database --\x3e> Server : Validate Email\n  Database--\x3e> Server : Validate Password\n Server --\x3e> Auth : Handle Sign in\nAuth --\x3e> User : Server Home Screen\nelse Password Incorrect or email DNE\nDatabase --\x3e> Server : Email or Password dne\nServer --\x3e> Auth : Handle Incorrect sign in\nAuth --\x3e> User : Incorrect Password or email message\n\nend"}),"\n",(0,s.jsx)(n.h2,{id:"use-case-creating-group-after-successfully-login-or-sign-up",children:"Use Case: Creating Group after successfully login or sign up"}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant User\n    participant Frontend\n    participant Backend\n\n    User->>Frontend: Submit group creation request\n    Frontend->>Backend: Retrieve user document (getDoc)\n    Backend->>Backend: Generate join code\n    Backend->>Backend: Create group document (addDoc)\n    Backend->>Backend: Update user document with new group (updateDoc)\n    Backend--\x3e>Frontend: Return new group document\n    Frontend--\x3e>User: Confirm group creation"}),"\n",(0,s.jsx)(n.h2,{id:"use-case-join-group-after-successfully-login--signup",children:"Use Case: Join Group after successfully login / signup"}),"\n",(0,s.jsx)(n.mermaid,{value:"\nsequenceDiagram\n    participant User\n    participant Frontend\n    participant Backend\n\n    User->>Frontend: Submit join code\n    Frontend->>Backend: Query groups collection with join code (where)\n    Backend--\x3e>Frontend: Return matching group or false\n    alt Group Found\n        Frontend->>Backend: Retrieve user document (getDoc)\n        Backend--\x3e>Backend: Return user data\n        Backend->>Backend: Update user document with new group (updateDoc)\n        Backend->>Backend: Update group document with new user (updateDoc)\n        Backend--\x3e>Frontend: Return updated group data\n        Frontend--\x3e>User: Group joined successfully\n    else No Group Found\n        Frontend--\x3e>User: Display error message: Invalid join code\n    end"})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var s=r(96540);const a={},t=s.createContext(a);function i(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);