"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[3374],{22496:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var a=n(74848),i=n(28453);const s={sidebar_position:1},r="System Overview",o={id:"requirements/system-overview",title:"System Overview",description:"This UML diagram represents the structure of a software application, showcasing classes, their attributes, methods, and relationships. Here's a concise overview:",source:"@site/docs/requirements/system-overview.md",sourceDirName:"requirements",slug:"/requirements/system-overview",permalink:"/growe/docs/requirements/system-overview",draft:!1,unlisted:!1,editUrl:"https://github.com/cis3296f24/growe/edit/main/documentation/docs/requirements/system-overview.md",tags:[],version:"current",lastUpdatedBy:"Khanh Nguyen",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Requirements Specification",permalink:"/growe/docs/category/requirements-specification"},next:{title:"System Block Diagram",permalink:"/growe/docs/requirements/system-block-diagram"}},c={},l=[{value:"This UML diagram represents the structure of a software application, showcasing classes, their attributes, methods, and relationships. Here&#39;s a concise overview:",id:"this-uml-diagram-represents-the-structure-of-a-software-application-showcasing-classes-their-attributes-methods-and-relationships-heres-a-concise-overview",level:2},{value:"Core Structure:",id:"core-structure",level:2},{value:"Layouts and Pages:",id:"layouts-and-pages",level:2},{value:"Navigation:",id:"navigation",level:2},{value:"Functionality:",id:"functionality",level:2},{value:"Context Management:",id:"context-management",level:2},{value:"Relationships:",id:"relationships",level:2},{value:"This diagram outlines a modular application with clear separation of concerns, emphasizing navigation, context management, and functionality.",id:"this-diagram-outlines-a-modular-application-with-clear-separation-of-concerns-emphasizing-navigation-context-management-and-functionality",level:2}];function d(e){const t={h1:"h1",h2:"h2",p:"p",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"system-overview",children:"System Overview"}),"\n",(0,a.jsx)(t.h2,{id:"this-uml-diagram-represents-the-structure-of-a-software-application-showcasing-classes-their-attributes-methods-and-relationships-heres-a-concise-overview",children:"This UML diagram represents the structure of a software application, showcasing classes, their attributes, methods, and relationships. Here's a concise overview:"}),"\n",(0,a.jsx)(t.h2,{id:"core-structure",children:"Core Structure:"}),"\n",(0,a.jsx)(t.p,{children:"The RootLayout serves as the main container, aggregating shared components like Header, Footer, and UserProvider, and composing page layouts like Index."}),"\n",(0,a.jsx)(t.h2,{id:"layouts-and-pages",children:"Layouts and Pages:"}),"\n",(0,a.jsx)(t.p,{children:"Different layouts (HomeLayout, LogLayout, GroupLayout, etc.) organize specific pages of the app (Garden, Camera, Group, etc.)."}),"\n",(0,a.jsx)(t.h2,{id:"navigation",children:"Navigation:"}),"\n",(0,a.jsx)(t.p,{children:"Components like Auth, Footer, Garden, and Header navigate between different pages, managing the flow of the application."}),"\n",(0,a.jsx)(t.h2,{id:"functionality",children:"Functionality:"}),"\n",(0,a.jsx)(t.p,{children:"Auth handles user authentication and account-related actions (e.g., sign-up, login).\nCamera manages camera interactions (e.g., capturing and uploading photos).\nGroup and Garden represent group management and collaborative features."}),"\n",(0,a.jsx)(t.h2,{id:"context-management",children:"Context Management:"}),"\n",(0,a.jsx)(t.p,{children:"UserProvider and useUser manage and provide access to the global user state."}),"\n",(0,a.jsx)(t.h2,{id:"relationships",children:"Relationships:"}),"\n",(0,a.jsx)(t.p,{children:"Aggregation and Composition organize components hierarchically.\nNavigation and Usage relationships show interactions and dependencies."}),"\n",(0,a.jsx)(t.h2,{id:"this-diagram-outlines-a-modular-application-with-clear-separation-of-concerns-emphasizing-navigation-context-management-and-functionality",children:"This diagram outlines a modular application with clear separation of concerns, emphasizing navigation, context management, and functionality."})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var a=n(96540);const i={},s=a.createContext(i);function r(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);